!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s(require("clone"),require("d3-ease"),require("d3-hierarchy"),require("prop-types"),require("react")):"function"==typeof define&&define.amd?define(["clone","d3-ease","d3-hierarchy","prop-types","react"],s):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTreeGraph=s(e.clone,e.d3,e.d3,e.PropTypes,e.React)}(this,(function(e,s,t,r,i){"use strict";function o(){return(o=Object.assign||function(e){for(var s=1;s<arguments.length;s++){var t=arguments[s];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}const p=/on[A-Z]/;function n(e,...s){const t=Object.keys(e).filter((s=>p.test(s)&&"function"==typeof e[s])).reduce(((t,r)=>(t[r]=function(e,s){return t=>e(t,...s)}(e[r],s),t)),{});return{...e,...t}}const a={source:r.object.isRequired,target:r.object.isRequired,keyProp:r.string.isRequired,x1:r.number.isRequired,x2:r.number.isRequired,y1:r.number.isRequired,y2:r.number.isRequired,pathFunc:r.func.isRequired,pathProps:r.object.isRequired};const h={pathFunc:function(e,s,t,r){return`M${s},${e}C${(s+r)/2},${e} ${(s+r)/2},${t} ${r},${t}`}};class d extends i.PureComponent{render(){const e=n(this.props.pathProps,this.props.source.data[this.props.keyProp],this.props.target.data[this.props.keyProp]),s=this.props.pathFunc(this.props.x1,this.props.y1,this.props.x2,this.props.y2);return i.createElement("path",o({},e,{d:s}))}}d.defaultProps=h,d.propTypes=a;const l={x:r.number.isRequired,y:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,shape:r.string.isRequired,nodeProps:r.object.isRequired,partner:r.object,gProps:r.object.isRequired,textProps:r.object.isRequired};class u extends i.PureComponent{getTransform(){return`translate(${this.props.y}, ${this.props.x})`}render(){let e=0,s=this.props.nodeProps;switch(this.props.shape){case"circle":s={r:5,...s},e=s.r;break;case"image":case"rect":s={height:10,width:10,...s},s={x:-s.width/2,y:-s.height/2,...s},e=s.width/2}const t=n(s,this.props[this.props.keyProp]),r=n(this.props.gProps,this.props[this.props.keyProp]),p=n(this.props.textProps,this.props[this.props.keyProp]),a=p.fontSize;return i.createElement("g",o({},r,{transform:this.getTransform(),id:this.props[this.props.keyProp]}),i.createElement(this.props.shape,t),i.createElement("text",o({},p,{dx:e+.5}),(!this.props.partner.name||!this.props.partner.name.length)&&i.createElement("tspan",{dy:a/2.5},this.props[this.props.labelProp]),this.props.partner.name&&this.props.partner.name.length&&i.createElement("tspan",{dy:-a/2.5},this.props[this.props.labelProp]),this.props.partner.name&&this.props.partner.name.length&&i.createElement("tspan",{x:e+.5,dy:a+.5},this.props.partner.name)))}}u.propTypes=l;const c={children:r.node,partner:r.node,height:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,links:r.array.isRequired,nodes:r.array.isRequired,nodeClassName:r.string,nodeShape:r.string.isRequired,nodeProps:r.object.isRequired,pathFunc:r.func,width:r.number.isRequired,gProps:r.object.isRequired,pathProps:r.object.isRequired,svgProps:r.object.isRequired,textProps:r.object.isRequired};class m extends i.PureComponent{render(){return i.createElement("svg",o({},this.props.svgProps,{height:this.props.height,width:this.props.width}),this.props.children,i.createElement("g",null,this.props.links.map((e=>i.createElement(d,{key:e.target.data[this.props.keyProp],keyProp:this.props.keyProp,pathFunc:this.props.pathFunc,source:e.source,target:e.target,x1:e.source.x,x2:e.target.x,y1:e.source.y,y2:e.target.y,pathProps:{...this.props.pathProps,...e.target.data.pathProps}}))),this.props.nodes.map((e=>i.createElement(u,o({key:e.data[this.props.keyProp],keyProp:this.props.keyProp,labelProp:this.props.labelProp,shape:this.props.nodeShape,x:e.x,y:e.y,nodeProps:{...this.props.nodeProps,...e.data.nodeProps},gProps:{...this.props.gProps,...e.data.gProps},textProps:{...this.props.textProps,...e.data.textProps}},e.data))))))}}m.propTypes=c;const g={animated:r.bool.isRequired,getChildren:r.func.isRequired,keyProp:r.string.isRequired,links:r.array.isRequired,nodes:r.array.isRequired,duration:r.number.isRequired,easing:r.func.isRequired,steps:r.number.isRequired,animationCompleted:r.func};class P extends i.PureComponent{constructor(e){if(super(e),e.animated){let s=e.nodes[0].x,t=e.nodes[0].y;this.state={nodes:e.nodes.map((e=>({...e,x:s,y:t}))),links:e.links.map((e=>({source:{...e.source,x:s,y:t},target:{...e.target,x:s,y:t}})))}}else this.state={nodes:e.nodes,links:e.links}}componentDidMount(){this.props.animated&&this.animate(this.props)}componentWillReceiveProps(e){e.nodes===this.props.nodes&&e.links===this.props.links||(e.animated?this.animate(e):this.setState({nodes:e.nodes,links:e.links}))}animate(e){clearInterval(this.animation);let s=0,t=this.getAnimationContext(this.state,e);this.animation=setInterval((()=>{if(s++,s===e.steps)return clearInterval(this.animation),this.animation=null,this.setState({nodes:e.nodes,links:e.links}),void(this.props.animationCompleted&&this.props.animationCompleted());this.setState(this.calculateNewState(t,s/e.steps))}),e.duration/e.steps)}getAnimationContext(e,s){let t=s.nodes.filter((s=>e.nodes.every((e=>!this.areNodesSame(s,e))))).map((t=>({base:t,old:this.getClosestAncestor(t,s,e),new:t}))),r=s.nodes.filter((s=>e.nodes.some((e=>this.areNodesSame(s,e))))).map((s=>({base:s,old:e.nodes.find((e=>this.areNodesSame(s,e))),new:s}))),i=e.nodes.filter((e=>s.nodes.every((s=>!this.areNodesSame(e,s))))).map((t=>({base:t,old:t,new:this.getClosestAncestor(t,e,s)}))),o=s.links.filter((s=>e.links.every((e=>!this.areLinksSame(s,e))))).map((t=>({base:t,old:this.getClosestAncestor(t.target,s,e),new:t}))),p=s.links.filter((s=>e.links.some((e=>this.areLinksSame(s,e))))).map((s=>({base:s,old:e.links.find((e=>this.areLinksSame(s,e))),new:s}))),n=e.links.filter((e=>s.links.every((s=>!this.areLinksSame(e,s))))).map((t=>({base:t,old:t,new:this.getClosestAncestor(t.target,e,s)})));return{nodes:r.concat(t).concat(i),links:p.concat(o).concat(n)}}getClosestAncestor(e,s,t){let r=e;for(;r;){let e=t.nodes.find((e=>this.areNodesSame(r,e)));if(e)return e;r=s.nodes.find((e=>(this.props.getChildren(e)||[]).some((e=>this.areNodesSame(r,e)))))}return t.nodes[0]}areNodesSame(e,s){return e.data[this.props.keyProp]===s.data[this.props.keyProp]}areLinksSame(e,s){return e.source.data[this.props.keyProp]===s.source.data[this.props.keyProp]&&e.target.data[this.props.keyProp]===s.target.data[this.props.keyProp]}calculateNewState(e,s){return{nodes:e.nodes.map((e=>this.calculateNodePosition(e.base,e.old,e.new,s))),links:e.links.map((e=>this.calculateLinkPosition(e.base,e.old,e.new,s)))}}calculateNodePosition(e,s,t,r){return{...e,x:this.calculateNewValue(s.x,t.x,r),y:this.calculateNewValue(s.y,t.y,r)}}calculateLinkPosition(e,s,t,r){return{source:{...e.source,x:this.calculateNewValue(s.source?s.source.x:s.x,t.source?t.source.x:t.x,r),y:this.calculateNewValue(s.source?s.source.y:s.y,t.source?t.source.y:t.y,r)},target:{...e.target,x:this.calculateNewValue(s.target?s.target.x:s.x,t.target?t.target.x:t.x,r),y:this.calculateNewValue(s.target?s.target.y:s.y,t.target?t.target.y:t.y,r)}}}calculateNewValue(e,s,t){return e+(s-e)*this.props.easing(t)}render(){return i.createElement(m,o({},this.props,this.state))}}P.propTypes=g;const y={data:r.object.isRequired,animated:r.bool.isRequired,children:r.node,duration:r.number.isRequired,easing:r.func.isRequired,steps:r.number.isRequired,height:r.number.isRequired,width:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,getChildren:r.func.isRequired,margins:r.shape({bottom:r.number.isRequired,left:r.number.isRequired,right:r.number.isRequired,top:r.number.isRequired}).isRequired,pathFunc:r.func,nodeShape:r.oneOf(["circle","image","polygon","rect"]).isRequired,nodeProps:r.object.isRequired,gProps:r.object.isRequired,pathProps:r.object.isRequired,svgProps:r.object.isRequired,textProps:r.object.isRequired,renderingCompletedCB:r.func},b={animated:!1,duration:500,easing:s.easeQuadOut,getChildren:e=>e.children,steps:20,keyProp:"name",labelProp:"name",margins:{bottom:10,left:20,right:150,top:10},nodeShape:"circle",nodeProps:{},gProps:{},pathProps:{},svgProps:{},textProps:{}},k=(e,s,t)=>{s.children&&s.children.length>0&&(t.length<=e+1&&t.push(0),t[e+1]+=s.children.length,s.children.forEach((s=>{k(e+1,s,t)})))},q=(e,s)=>{let t=s;return e.children&&e.children.length>0&&e.children.forEach((e=>{t=Math.max(t,q(e,s+1))})),t};class R extends i.PureComponent{render(){const s=this.props.width-this.props.margins.left-this.props.margins.right,r=this.props.height-this.props.margins.top-this.props.margins.bottom;let o=t.hierarchy(e(this.props.data),this.props.getChildren),p=t.tree().size([r,s])(o),n=[1];k(0,p,n);let a=70*Math.max(...n),h=120*q(p,1);p=t.tree().size([Math.max(a,r),Math.max(h,0)])(o);let d=p.descendants(),l=p.links();return d.forEach((e=>{e.y+=this.props.margins.top})),i.createElement(P,{animated:this.props.animated,duration:this.props.duration,easing:this.props.easing,getChildren:this.props.getChildren,height:this.props.height,keyProp:this.props.keyProp,labelProp:this.props.labelProp,links:l,nodes:d,nodeShape:this.props.nodeShape,nodeProps:this.props.nodeProps,pathFunc:this.props.pathFunc,steps:this.props.steps,width:this.props.width,gProps:{className:"node",...this.props.gProps},pathProps:{className:"link",...this.props.pathProps},svgProps:this.props.svgProps,textProps:this.props.textProps,animationCompleted:this.props.renderingCompletedCB},this.props.children)}}return R.propTypes=y,R.defaultProps=b,R}));
