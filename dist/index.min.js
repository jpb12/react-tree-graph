!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("clone"),require("d3-ease"),require("d3-hierarchy"),require("prop-types"),require("react")):"function"==typeof define&&define.amd?define(["clone","d3-ease","d3-hierarchy","prop-types","react"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).ReactTreeGraph=t(e.clone,e.d3,e.d3,e.PropTypes,e.React)}(this,(function(e,t,s,r,i){"use strict";function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e}).apply(this,arguments)}const p=/on[A-Z]/;function n(e,...t){const s=Object.keys(e).filter((t=>p.test(t)&&"function"==typeof e[t])).reduce(((s,r)=>(s[r]=function(e,t){return s=>e(s,...t)}(e[r],t),s)),{});return{...e,...s}}const a={source:r.object.isRequired,target:r.object.isRequired,keyProp:r.string.isRequired,x1:r.number.isRequired,x2:r.number.isRequired,y1:r.number.isRequired,y2:r.number.isRequired,pathFunc:r.func.isRequired,pathProps:r.object.isRequired,getLinkText:r.func,linkTextProps:r.object};const h={pathFunc:function(e,t,s,r){return`M${t},${e}C${(t+r)/2},${e} ${(t+r)/2},${s} ${r},${s}`}};let d=0;class l extends i.PureComponent{render(){const e=n(this.props.pathProps,this.props.source.data[this.props.keyProp],this.props.target.data[this.props.keyProp]),t=this.props.pathFunc(this.props.x1,this.props.y1,this.props.x2,this.props.y2),s=++d+"link";return i.createElement(i.Fragment,null,i.createElement("path",o({},e,{id:s,d:t})),this.props.getLinkText&&i.createElement("text",o({id:s+"text"},this.props.linkTextProps),i.createElement("textPath",{xlinkHref:"#"+s,startOffset:"50%","text-anchor":"middle"},this.props.getLinkText(this.props.source.data[this.props.keyProp],this.props.target.data[this.props.keyProp]))))}}l.defaultProps=h,l.propTypes=a;const u={x:r.number.isRequired,y:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,shape:r.string.isRequired,nodeProps:r.object.isRequired,partner:r.object,gProps:r.object.isRequired,textProps:r.object.isRequired};class c extends i.PureComponent{getTransform(){return`translate(${this.props.y}, ${this.props.x})`}render(){let e=0,t=this.props.nodeProps;switch(this.props.shape){case"circle":t={r:5,...t},e=t.r;break;case"image":case"rect":t={height:10,width:10,...t},t={x:-t.width/2,y:-t.height/2,...t},e=t.width/2}const s=n(t,this.props[this.props.keyProp]),r=n(this.props.gProps,this.props[this.props.keyProp]),p=n(this.props.textProps,this.props[this.props.keyProp]),a=p.fontSize;return i.createElement("g",o({},r,{transform:this.getTransform(),id:this.props[this.props.keyProp]}),i.createElement(this.props.shape,s),i.createElement("text",o({},p,{dx:e+.5}),(!this.props.partner.name||!this.props.partner.name.length)&&i.createElement("tspan",{dy:a/2.5},this.props[this.props.labelProp]),this.props.partner.name&&this.props.partner.name.length&&i.createElement("tspan",{dy:-a/2.5},this.props[this.props.labelProp]),this.props.partner.name&&this.props.partner.name.length&&i.createElement("tspan",{x:e+.5,dy:a+.5},this.props.partner.name)))}}c.propTypes=u;const m={children:r.node,partner:r.node,height:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,links:r.array.isRequired,nodes:r.array.isRequired,nodeClassName:r.string,nodeShape:r.string.isRequired,nodeProps:r.object.isRequired,pathFunc:r.func,width:r.number.isRequired,gProps:r.object.isRequired,pathProps:r.object.isRequired,svgProps:r.object.isRequired,textProps:r.object.isRequired,linkTextProps:r.object,getLinkText:r.func};class g extends i.PureComponent{render(){return i.createElement("svg",o({},this.props.svgProps,{height:this.props.height,width:this.props.width}),this.props.children,i.createElement("g",null,this.props.links.map((e=>i.createElement(l,{key:e.target.data[this.props.keyProp],keyProp:this.props.keyProp,pathFunc:this.props.pathFunc,source:e.source,target:e.target,x1:e.source.x,x2:e.target.x,y1:e.source.y,y2:e.target.y,getLinkText:this.props.getLinkText,linkTextProps:this.props.linkTextProps,pathProps:{...this.props.pathProps,...e.target.data.pathProps}}))),this.props.nodes.map((e=>i.createElement(c,o({key:e.data[this.props.keyProp],keyProp:this.props.keyProp,labelProp:this.props.labelProp,shape:this.props.nodeShape,x:e.x,y:e.y,nodeProps:{...this.props.nodeProps,...e.data.nodeProps},gProps:{...this.props.gProps,...e.data.gProps},textProps:{...this.props.textProps,...e.data.textProps}},e.data))))))}}g.propTypes=m;const P={animated:r.bool.isRequired,getChildren:r.func.isRequired,keyProp:r.string.isRequired,links:r.array.isRequired,nodes:r.array.isRequired,duration:r.number.isRequired,easing:r.func.isRequired,steps:r.number.isRequired,animationCompleted:r.func};class y extends i.PureComponent{constructor(e){if(super(e),e.animated){let t=e.nodes[0].x,s=e.nodes[0].y;this.state={nodes:e.nodes.map((e=>({...e,x:t,y:s}))),links:e.links.map((e=>({source:{...e.source,x:t,y:s},target:{...e.target,x:t,y:s}})))}}else this.state={nodes:e.nodes,links:e.links}}componentDidMount(){this.props.animated&&this.animate(this.props)}componentWillReceiveProps(e){e.nodes===this.props.nodes&&e.links===this.props.links||(e.animated?this.animate(e):this.setState({nodes:e.nodes,links:e.links}))}animate(e){clearInterval(this.animation);let t=0,s=this.getAnimationContext(this.state,e);this.animation=setInterval((()=>{if(t++,t===e.steps)return clearInterval(this.animation),this.animation=null,this.setState({nodes:e.nodes,links:e.links}),void(this.props.animationCompleted&&this.props.animationCompleted());this.setState(this.calculateNewState(s,t/e.steps))}),e.duration/e.steps)}getAnimationContext(e,t){let s=t.nodes.filter((t=>e.nodes.every((e=>!this.areNodesSame(t,e))))).map((s=>({base:s,old:this.getClosestAncestor(s,t,e),new:s}))),r=t.nodes.filter((t=>e.nodes.some((e=>this.areNodesSame(t,e))))).map((t=>({base:t,old:e.nodes.find((e=>this.areNodesSame(t,e))),new:t}))),i=e.nodes.filter((e=>t.nodes.every((t=>!this.areNodesSame(e,t))))).map((s=>({base:s,old:s,new:this.getClosestAncestor(s,e,t)}))),o=t.links.filter((t=>e.links.every((e=>!this.areLinksSame(t,e))))).map((s=>({base:s,old:this.getClosestAncestor(s.target,t,e),new:s}))),p=t.links.filter((t=>e.links.some((e=>this.areLinksSame(t,e))))).map((t=>({base:t,old:e.links.find((e=>this.areLinksSame(t,e))),new:t}))),n=e.links.filter((e=>t.links.every((t=>!this.areLinksSame(e,t))))).map((s=>({base:s,old:s,new:this.getClosestAncestor(s.target,e,t)})));return{nodes:r.concat(s).concat(i),links:p.concat(o).concat(n)}}getClosestAncestor(e,t,s){let r=e;for(;r;){let e=s.nodes.find((e=>this.areNodesSame(r,e)));if(e)return e;r=t.nodes.find((e=>(this.props.getChildren(e)||[]).some((e=>this.areNodesSame(r,e)))))}return s.nodes[0]}areNodesSame(e,t){return e.data[this.props.keyProp]===t.data[this.props.keyProp]}areLinksSame(e,t){return e.source.data[this.props.keyProp]===t.source.data[this.props.keyProp]&&e.target.data[this.props.keyProp]===t.target.data[this.props.keyProp]}calculateNewState(e,t){return{nodes:e.nodes.map((e=>this.calculateNodePosition(e.base,e.old,e.new,t))),links:e.links.map((e=>this.calculateLinkPosition(e.base,e.old,e.new,t)))}}calculateNodePosition(e,t,s,r){return{...e,x:this.calculateNewValue(t.x,s.x,r),y:this.calculateNewValue(t.y,s.y,r)}}calculateLinkPosition(e,t,s,r){return{source:{...e.source,x:this.calculateNewValue(t.source?t.source.x:t.x,s.source?s.source.x:s.x,r),y:this.calculateNewValue(t.source?t.source.y:t.y,s.source?s.source.y:s.y,r)},target:{...e.target,x:this.calculateNewValue(t.target?t.target.x:t.x,s.target?s.target.x:s.x,r),y:this.calculateNewValue(t.target?t.target.y:t.y,s.target?s.target.y:s.y,r)}}}calculateNewValue(e,t,s){return e+(t-e)*this.props.easing(s)}render(){return i.createElement(g,o({},this.props,this.state))}}y.propTypes=P;const k={data:r.object.isRequired,animated:r.bool.isRequired,children:r.node,duration:r.number.isRequired,easing:r.func.isRequired,steps:r.number.isRequired,height:r.number.isRequired,width:r.number.isRequired,keyProp:r.string.isRequired,labelProp:r.string.isRequired,getChildren:r.func.isRequired,margins:r.shape({bottom:r.number.isRequired,left:r.number.isRequired,right:r.number.isRequired,top:r.number.isRequired}).isRequired,pathFunc:r.func,nodeShape:r.oneOf(["circle","image","polygon","rect"]).isRequired,nodeProps:r.object.isRequired,gProps:r.object.isRequired,pathProps:r.object.isRequired,svgProps:r.object.isRequired,textProps:r.object.isRequired,renderingCompletedCB:r.func,linkTextProps:r.object,getLinkText:r.func},x={animated:!1,duration:500,easing:t.easeQuadOut,getChildren:e=>e.children,steps:20,keyProp:"name",labelProp:"name",margins:{bottom:10,left:20,right:150,top:10},nodeShape:"circle",nodeProps:{},gProps:{},pathProps:{},svgProps:{},textProps:{}},b=(e,t,s)=>{t.children&&t.children.length>0&&(s.length<=e+1&&s.push(0),s[e+1]+=t.children.length,t.children.forEach((t=>{b(e+1,t,s)})))},f=(e,t)=>{let s=t;return e.children&&e.children.length>0&&e.children.forEach((e=>{s=Math.max(s,f(e,t+1))})),s};class q extends i.PureComponent{render(){const t=this.props.width-this.props.margins.left-this.props.margins.right,r=this.props.height-this.props.margins.top-this.props.margins.bottom;let o=s.hierarchy(e(this.props.data),this.props.getChildren),p=s.tree().size([r,t])(o),n=[1];b(0,p,n);let a=70*Math.max(...n),h=120*f(p,1);p=s.tree().size([Math.max(a,r),Math.max(h,0)])(o);let d=p.descendants(),l=p.links();return d.forEach((e=>{e.y+=this.props.margins.top})),i.createElement(y,{animated:this.props.animated,duration:this.props.duration,easing:this.props.easing,getChildren:this.props.getChildren,height:this.props.height,keyProp:this.props.keyProp,labelProp:this.props.labelProp,links:l,nodes:d,nodeShape:this.props.nodeShape,nodeProps:this.props.nodeProps,pathFunc:this.props.pathFunc,steps:this.props.steps,width:this.props.width,gProps:{className:"node",...this.props.gProps},pathProps:{className:"link",...this.props.pathProps},svgProps:this.props.svgProps,textProps:this.props.textProps,linkTextProps:this.props.linkTextProps,getLinkText:this.props.getLinkText,animationCompleted:this.props.renderingCompletedCB},this.props.children)}}return q.propTypes=k,q.defaultProps=x,q}));
