"use strict";(self.webpackChunkreact_tree_graph=self.webpackChunkreact_tree_graph||[]).push([[331],{"./.storybook/stories/nodes.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomNodeProps:()=>CustomNodeProps,ImageNodes:()=>ImageNodes,PolygonNodes:()=>PolygonNodes,RectangularNodes:()=>RectangularNodes,__namedExportsOrder:()=>__namedExportsOrder,default:()=>nodes_stories});var tree=__webpack_require__("./src/components/tree.js"),argTypes=__webpack_require__("./.storybook/stories/argTypes.js"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),nodeProps=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./.storybook/styles/nodeProps.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(nodeProps.Z,options);nodeProps.Z&&nodeProps.Z.locals&&nodeProps.Z.locals;var polygon=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./.storybook/styles/polygon.css"),polygon_options={};polygon_options.styleTagTransform=styleTagTransform_default(),polygon_options.setAttributes=setAttributesWithoutAttributes_default(),polygon_options.insert=insertBySelector_default().bind(null,"head"),polygon_options.domAPI=styleDomAPI_default(),polygon_options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(polygon.Z,polygon_options);polygon.Z&&polygon.Z.locals&&polygon.Z.locals;var _RectangularNodes$par,_RectangularNodes$par2,_RectangularNodes$par3,_PolygonNodes$paramet,_PolygonNodes$paramet2,_PolygonNodes$paramet3,_ImageNodes$parameter,_ImageNodes$parameter2,_ImageNodes$parameter3,_CustomNodeProps$para,_CustomNodeProps$para2,_CustomNodeProps$para3;const nodes_stories={title:"Tree/Nodes",subtitle:"Rectangular Nodes",component:tree.Z,argTypes:argTypes.xs},defaultArgs={height:400,width:600,data:{name:"Parent",children:[{name:"Child One"},{name:"Child Two"}]}},RectangularNodes={args:{...defaultArgs,nodeShape:"rect",nodeProps:{rx:2}},parameters:{componentSubtitle:"Rectangular Nodes",controls:{include:["data","nodeShape","nodeProps"]}}},PolygonNodes={args:{...defaultArgs,nodeShape:"polygon",nodeProps:{points:[10,0,12.351141009169893,6.76393202250021,19.510565162951536,6.9098300562505255,13.804226065180615,11.23606797749979,15.877852522924734,18.090169943749473,10,14,4.12214747707527,18.090169943749473,6.195773934819385,11.23606797749979,.4894348370484636,6.909830056250527,7.648858990830107,6.76393202250021].join(","),transform:"translate(-10,-10)"},svgProps:{className:"star"},textProps:{dx:10.5}},parameters:{controls:{include:["data","nodeShape","nodeProps","svgProps","textProps"]},docs:{description:{story:"For polygons, you will have to pass additional props to position the polygon and text. The polygon should be translated by half it's width and height, and the text should be offset by half the polygon's width plus some spacing for a gap."}}}},ImageNodes={args:{...defaultArgs,nodeShape:"image",nodeProps:{height:20,width:20,href:"disc.png"}},parameters:{controls:{include:["data","nodeShape","nodeProps"]}}},CustomNodeProps={args:{...defaultArgs,data:{name:"Parent",children:[{label:"First Child",labelProp:"label",name:"Child One",shape:"rect"},{name:"Child Two",gProps:{className:"red-node"}}]},gProps:{onClick:(event,node)=>alert(`Clicked ${node}!`)}},parameters:{controls:{include:["data","nodeProps","gProps","pathProps","textProps","labelProp","keyProp","nodeShape"]},docs:{description:{story:"You can override props for individual nodes by setting them inside the `data` prop. `nodeProps`, `gProps`, `pathProps` (taken from the target node) and `textProps` on each node will be combined with those passed into `<Tree>`. `keyProp`, `labelProp` and `shape` (overrides `nodeShape`) will override those passed into `<Tree>`"}}}};RectangularNodes.parameters={...RectangularNodes.parameters,docs:{...null===(_RectangularNodes$par=RectangularNodes.parameters)||void 0===_RectangularNodes$par?void 0:_RectangularNodes$par.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs,\n    nodeShape: 'rect',\n    nodeProps: {\n      rx: 2\n    }\n  },\n  parameters: {\n    componentSubtitle: 'Rectangular Nodes',\n    controls: {\n      include: ['data', 'nodeShape', 'nodeProps']\n    }\n  }\n}",...null===(_RectangularNodes$par2=RectangularNodes.parameters)||void 0===_RectangularNodes$par2||null===(_RectangularNodes$par3=_RectangularNodes$par2.docs)||void 0===_RectangularNodes$par3?void 0:_RectangularNodes$par3.source}}},PolygonNodes.parameters={...PolygonNodes.parameters,docs:{...null===(_PolygonNodes$paramet=PolygonNodes.parameters)||void 0===_PolygonNodes$paramet?void 0:_PolygonNodes$paramet.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs,\n    nodeShape: 'polygon',\n    nodeProps: {\n      points: [10, 0, 12.351141009169893, 6.76393202250021, 19.510565162951536, 6.9098300562505255, 13.804226065180615, 11.23606797749979, 15.877852522924734, 18.090169943749473, 10, 14, 4.12214747707527, 18.090169943749473, 6.195773934819385, 11.23606797749979, 0.4894348370484636, 6.909830056250527, 7.648858990830107, 6.76393202250021].join(','),\n      transform: 'translate(-10,-10)'\n    },\n    svgProps: {\n      className: 'star'\n    },\n    textProps: {\n      dx: 10.5\n    }\n  },\n  parameters: {\n    controls: {\n      include: ['data', 'nodeShape', 'nodeProps', 'svgProps', 'textProps']\n    },\n    docs: {\n      description: {\n        story: 'For polygons, you will have to pass additional props to position the polygon and text. The polygon should be translated by half it\\'s width and height, and the text should be offset by half the polygon\\'s width plus some spacing for a gap.'\n      }\n    }\n  }\n}",...null===(_PolygonNodes$paramet2=PolygonNodes.parameters)||void 0===_PolygonNodes$paramet2||null===(_PolygonNodes$paramet3=_PolygonNodes$paramet2.docs)||void 0===_PolygonNodes$paramet3?void 0:_PolygonNodes$paramet3.source}}},ImageNodes.parameters={...ImageNodes.parameters,docs:{...null===(_ImageNodes$parameter=ImageNodes.parameters)||void 0===_ImageNodes$parameter?void 0:_ImageNodes$parameter.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs,\n    nodeShape: 'image',\n    nodeProps: {\n      height: 20,\n      width: 20,\n      href: 'disc.png'\n    }\n  },\n  parameters: {\n    controls: {\n      include: ['data', 'nodeShape', 'nodeProps']\n    }\n  }\n}",...null===(_ImageNodes$parameter2=ImageNodes.parameters)||void 0===_ImageNodes$parameter2||null===(_ImageNodes$parameter3=_ImageNodes$parameter2.docs)||void 0===_ImageNodes$parameter3?void 0:_ImageNodes$parameter3.source}}},CustomNodeProps.parameters={...CustomNodeProps.parameters,docs:{...null===(_CustomNodeProps$para=CustomNodeProps.parameters)||void 0===_CustomNodeProps$para?void 0:_CustomNodeProps$para.docs,source:{originalSource:"{\n  args: {\n    ...defaultArgs,\n    data: {\n      name: 'Parent',\n      children: [{\n        label: 'First Child',\n        labelProp: 'label',\n        name: 'Child One',\n        shape: 'rect'\n      }, {\n        name: 'Child Two',\n        gProps: {\n          className: 'red-node'\n        }\n      }]\n    },\n    gProps: {\n      onClick: (event, node) => alert(`Clicked ${node}!`)\n    }\n  },\n  parameters: {\n    controls: {\n      include: ['data', 'nodeProps', 'gProps', 'pathProps', 'textProps', 'labelProp', 'keyProp', 'nodeShape']\n    },\n    docs: {\n      description: {\n        story: 'You can override props for individual nodes by setting them inside the `data` prop. `nodeProps`, `gProps`, `pathProps` (taken from the target node) and `textProps` on each node will be combined with those passed into `<Tree>`. `keyProp`, `labelProp` and `shape` (overrides `nodeShape`) will override those passed into `<Tree>`'\n      }\n    }\n  }\n}",...null===(_CustomNodeProps$para2=CustomNodeProps.parameters)||void 0===_CustomNodeProps$para2||null===(_CustomNodeProps$para3=_CustomNodeProps$para2.docs)||void 0===_CustomNodeProps$para3?void 0:_CustomNodeProps$para3.source}}};const __namedExportsOrder=["RectangularNodes","PolygonNodes","ImageNodes","CustomNodeProps"]},"./src/components/tree.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Tree});var prop_types__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__),_d3__WEBPACK_IMPORTED_MODULE_3__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/d3.js")),_container__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/container.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");function Tree(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_container__WEBPACK_IMPORTED_MODULE_2__.Z,{getChildren:props.getChildren,direction:props.direction,height:props.height,keyProp:props.keyProp,labelProp:props.labelProp,nodeShape:props.nodeShape,nodeProps:props.nodeProps,pathFunc:props.pathFunc,width:props.width,gProps:{className:"node",...props.gProps},pathProps:{className:"link",...props.pathProps},svgProps:props.svgProps,textProps:props.textProps,...(0,_d3__WEBPACK_IMPORTED_MODULE_3__.Z)(props),children:props.children})}Tree.displayName="Tree",Tree.propTypes={data:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,children:prop_types__WEBPACK_IMPORTED_MODULE_4___default().node,direction:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["ltr","rtl"]).isRequired,height:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired,width:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired,keyProp:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string.isRequired,labelProp:prop_types__WEBPACK_IMPORTED_MODULE_4___default().string.isRequired,getChildren:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func.isRequired,margins:prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({bottom:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired,left:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired,right:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired,top:prop_types__WEBPACK_IMPORTED_MODULE_4___default().number.isRequired}),pathFunc:prop_types__WEBPACK_IMPORTED_MODULE_4___default().func,nodeShape:prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(["circle","image","polygon","rect"]).isRequired,nodeProps:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,gProps:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,pathProps:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,svgProps:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired,textProps:prop_types__WEBPACK_IMPORTED_MODULE_4___default().object.isRequired},Tree.defaultProps={direction:"ltr",getChildren:n=>n.children,keyProp:"name",labelProp:"name",nodeShape:"circle",nodeProps:{},gProps:{},pathProps:{},svgProps:{},textProps:{}},Tree.__docgenInfo={description:"",methods:[],displayName:"Tree",props:{direction:{defaultValue:{value:"'ltr'",computed:!1},description:"",type:{name:"enum",value:[{value:"'ltr'",computed:!1},{value:"'rtl'",computed:!1}]},required:!1},getChildren:{defaultValue:{value:"n => n.children",computed:!1},description:"",type:{name:"func"},required:!1},keyProp:{defaultValue:{value:"'name'",computed:!1},description:"",type:{name:"string"},required:!1},labelProp:{defaultValue:{value:"'name'",computed:!1},description:"",type:{name:"string"},required:!1},nodeShape:{defaultValue:{value:"'circle'",computed:!1},description:"",type:{name:"enum",value:[{value:"'circle'",computed:!1},{value:"'image'",computed:!1},{value:"'polygon'",computed:!1},{value:"'rect'",computed:!1}]},required:!1},nodeProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},gProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},pathProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},svgProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},textProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},data:{description:"",type:{name:"object"},required:!0},children:{description:"",type:{name:"node"},required:!1},height:{description:"",type:{name:"number"},required:!0},width:{description:"",type:{name:"number"},required:!0},margins:{description:"",type:{name:"shape",value:{bottom:{name:"number",required:!0},left:{name:"number",required:!0},right:{name:"number",required:!0},top:{name:"number",required:!0}}},required:!1},pathFunc:{description:"",type:{name:"func"},required:!1}}}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./.storybook/styles/nodeProps.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".red-node {\r\n\tfill: red;\r\n\tstroke: red;\r\n}","",{version:3,sources:["webpack://./.storybook/styles/nodeProps.css"],names:[],mappings:"AAAA;CACC,SAAS;CACT,WAAW;AACZ",sourcesContent:[".red-node {\r\n\tfill: red;\r\n\tstroke: red;\r\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./.storybook/styles/polygon.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,"svg.star polygon {\r\n\tfill: white;\r\n\tstroke: black;\r\n}\r\n","",{version:3,sources:["webpack://./.storybook/styles/polygon.css"],names:[],mappings:"AAAA;CACC,WAAW;CACX,aAAa;AACd",sourcesContent:["svg.star polygon {\r\n\tfill: white;\r\n\tstroke: black;\r\n}\r\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);