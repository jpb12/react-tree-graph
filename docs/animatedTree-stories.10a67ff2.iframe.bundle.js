"use strict";(self.webpackChunkreact_tree_graph=self.webpackChunkreact_tree_graph||[]).push([[190],{"./.storybook/stories/animatedTree.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Animations:()=>Animations,__namedExportsOrder:()=>__namedExportsOrder,default:()=>animatedTree_stories});var _Animations$parameter,_Animations$parameter2,_Animations$parameter3,react=__webpack_require__("./node_modules/react/index.js"),quad=__webpack_require__("./node_modules/d3-ease/src/quad.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),d3=__webpack_require__("./src/d3.js"),container=__webpack_require__("./src/components/container.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Animated(props){const initialX=props.nodes[0].x,initialY=props.nodes[0].y,[state,setState]=(0,react.useState)({nodes:props.nodes.map((n=>({...n,x:initialX,y:initialY}))),links:props.links.map((l=>({source:{...l.source,x:initialX,y:initialY},target:{...l.target,x:initialX,y:initialY}})))}),[animation,setAnimation]=(0,react.useState)(null);function getClosestAncestor(node,stateWithNode,stateWithoutNode){let oldParent=node;for(;oldParent;){let newParent=stateWithoutNode.nodes.find((n=>areNodesSame(oldParent,n)));if(newParent)return newParent;oldParent=stateWithNode.nodes.find((n=>(props.getChildren(n)||[]).some((c=>areNodesSame(oldParent,c)))))}return stateWithoutNode.nodes[0]}function areNodesSame(a,b){return a.data[props.keyProp]===b.data[props.keyProp]}function areLinksSame(a,b){return a.source.data[props.keyProp]===b.source.data[props.keyProp]&&a.target.data[props.keyProp]===b.target.data[props.keyProp]}function calculateNewValue(start,end,interval){return start+(end-start)*props.easing(interval)}return(0,react.useEffect)((function animate(){clearInterval(animation);let counter=0;const animationContext=function getAnimationContext(initialState,newState){const addedNodes=newState.nodes.filter((n1=>initialState.nodes.every((n2=>!areNodesSame(n1,n2))))).map((n1=>({base:n1,old:getClosestAncestor(n1,newState,initialState),new:n1}))),changedNodes=newState.nodes.filter((n1=>initialState.nodes.some((n2=>areNodesSame(n1,n2))))).map((n1=>({base:n1,old:initialState.nodes.find((n2=>areNodesSame(n1,n2))),new:n1}))),removedNodes=initialState.nodes.filter((n1=>newState.nodes.every((n2=>!areNodesSame(n1,n2))))).map((n1=>({base:n1,old:n1,new:getClosestAncestor(n1,initialState,newState)}))),addedLinks=newState.links.filter((l1=>initialState.links.every((l2=>!areLinksSame(l1,l2))))).map((l1=>({base:l1,old:getClosestAncestor(l1.target,newState,initialState),new:l1}))),changedLinks=newState.links.filter((l1=>initialState.links.some((l2=>areLinksSame(l1,l2))))).map((l1=>({base:l1,old:initialState.links.find((l2=>areLinksSame(l1,l2))),new:l1}))),removedLinks=initialState.links.filter((l1=>newState.links.every((l2=>!areLinksSame(l1,l2))))).map((l1=>({base:l1,old:l1,new:getClosestAncestor(l1.target,initialState,newState)})));return{nodes:changedNodes.concat(addedNodes).concat(removedNodes),links:changedLinks.concat(addedLinks).concat(removedLinks)}}(state,props),interval=setInterval((()=>{if(counter++,counter===props.steps)return clearInterval(interval),void setState({nodes:props.nodes,links:props.links});setState(function calculateNewState(animationContext,interval){return{nodes:animationContext.nodes.map((n=>function calculateNodePosition(node,start,end,interval){return{...node,x:calculateNewValue(start.x,end.x,interval),y:calculateNewValue(start.y,end.y,interval)}}(n.base,n.old,n.new,interval))),links:animationContext.links.map((l=>function calculateLinkPosition(link,start,end,interval){return{source:{...link.source,x:calculateNewValue(start.source?start.source.x:start.x,end.source?end.source.x:end.x,interval),y:calculateNewValue(start.source?start.source.y:start.y,end.source?end.source.y:end.y,interval)},target:{...link.target,x:calculateNewValue(start.target?start.target.x:start.x,end.target?end.target.x:end.x,interval),y:calculateNewValue(start.target?start.target.y:start.y,end.target?end.target.y:end.y,interval)}}}(l.base,l.old,l.new,interval)))}}(animationContext,counter/props.steps))}),props.duration/props.steps);return setAnimation(interval),()=>clearInterval(animation)}),[props.nodes,props.links]),(0,jsx_runtime.jsx)(container.Z,{...props,...state})}function AnimatedTree(props){return(0,jsx_runtime.jsx)(Animated,{duration:props.duration,easing:props.easing,getChildren:props.getChildren,direction:props.direction,height:props.height,keyProp:props.keyProp,labelProp:props.labelProp,nodeShape:props.nodeShape,nodeProps:props.nodeProps,pathFunc:props.pathFunc,steps:props.steps,width:props.width,gProps:{className:"node",...props.gProps},pathProps:{className:"link",...props.pathProps},svgProps:props.svgProps,textProps:props.textProps,...(0,d3.Z)(props),children:props.children})}Animated.displayName="Animated",Animated.propTypes={getChildren:prop_types_default().func.isRequired,keyProp:prop_types_default().string.isRequired,links:prop_types_default().array.isRequired,nodes:prop_types_default().array.isRequired,duration:prop_types_default().number.isRequired,easing:prop_types_default().func.isRequired,steps:prop_types_default().number.isRequired},Animated.__docgenInfo={description:"",methods:[],displayName:"Animated",props:{getChildren:{description:"",type:{name:"func"},required:!0},keyProp:{description:"",type:{name:"string"},required:!0},links:{description:"",type:{name:"array"},required:!0},nodes:{description:"",type:{name:"array"},required:!0},duration:{description:"",type:{name:"number"},required:!0},easing:{description:"",type:{name:"func"},required:!0},steps:{description:"",type:{name:"number"},required:!0}}},AnimatedTree.displayName="AnimatedTree",AnimatedTree.propTypes={data:prop_types_default().object.isRequired,children:prop_types_default().node,direction:prop_types_default().oneOf(["ltr","rtl"]).isRequired,duration:prop_types_default().number.isRequired,easing:prop_types_default().func.isRequired,steps:prop_types_default().number.isRequired,height:prop_types_default().number.isRequired,width:prop_types_default().number.isRequired,keyProp:prop_types_default().string.isRequired,labelProp:prop_types_default().string.isRequired,getChildren:prop_types_default().func.isRequired,margins:prop_types_default().shape({bottom:prop_types_default().number.isRequired,left:prop_types_default().number.isRequired,right:prop_types_default().number.isRequired,top:prop_types_default().number.isRequired}),pathFunc:prop_types_default().func,nodeShape:prop_types_default().oneOf(["circle","image","polygon","rect"]).isRequired,nodeProps:prop_types_default().object.isRequired,gProps:prop_types_default().object.isRequired,pathProps:prop_types_default().object.isRequired,svgProps:prop_types_default().object.isRequired,textProps:prop_types_default().object.isRequired},AnimatedTree.defaultProps={direction:"ltr",duration:500,easing:quad.u4,getChildren:n=>n.children,steps:20,keyProp:"name",labelProp:"name",nodeShape:"circle",nodeProps:{},gProps:{},pathProps:{},svgProps:{},textProps:{}},AnimatedTree.__docgenInfo={description:"",methods:[],displayName:"AnimatedTree",props:{direction:{defaultValue:{value:"'ltr'",computed:!1},description:"",type:{name:"enum",value:[{value:"'ltr'",computed:!1},{value:"'rtl'",computed:!1}]},required:!1},duration:{defaultValue:{value:"500",computed:!1},description:"",type:{name:"number"},required:!1},easing:{defaultValue:{value:"easeQuadOut",computed:!0},description:"",type:{name:"func"},required:!1},getChildren:{defaultValue:{value:"n => n.children",computed:!1},description:"",type:{name:"func"},required:!1},steps:{defaultValue:{value:"20",computed:!1},description:"",type:{name:"number"},required:!1},keyProp:{defaultValue:{value:"'name'",computed:!1},description:"",type:{name:"string"},required:!1},labelProp:{defaultValue:{value:"'name'",computed:!1},description:"",type:{name:"string"},required:!1},nodeShape:{defaultValue:{value:"'circle'",computed:!1},description:"",type:{name:"enum",value:[{value:"'circle'",computed:!1},{value:"'image'",computed:!1},{value:"'polygon'",computed:!1},{value:"'rect'",computed:!1}]},required:!1},nodeProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},gProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},pathProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},svgProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},textProps:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},data:{description:"",type:{name:"object"},required:!0},children:{description:"",type:{name:"node"},required:!1},height:{description:"",type:{name:"number"},required:!0},width:{description:"",type:{name:"number"},required:!0},margins:{description:"",type:{name:"shape",value:{bottom:{name:"number",required:!0},left:{name:"number",required:!0},right:{name:"number",required:!0},top:{name:"number",required:!0}}},required:!1},pathFunc:{description:"",type:{name:"func"},required:!1}}};const animatedTree_stories={title:"AnimatedTree/Animations",component:AnimatedTree,argTypes:__webpack_require__("./.storybook/stories/argTypes.js").kk,parameters:{docs:{description:{component:"The AnimatedTree component has all the same props as the Tree component, and additional props to customise animation behaviour. Animations are automatically triggered when changes to the `data` prop are made. This demo works by using `setTimeout` to change the `data` prop every 2 seconds."}}}},order=[0,1,0,2],data=[{name:"Parent",children:[{name:"Child One"},{name:"Child Two"},{name:"Child Three",children:[{name:"Grandchild One"},{name:"Grandchild Two"}]}]},{name:"Child Three",children:[{name:"Grandchild One"},{name:"Grandchild Two"}]},{name:"Parent",children:[{name:"Child One"},{name:"Child Two"}]}],Animations={args:{height:400,width:600},parameters:{controls:{include:["duration","easing","steps"]}},render:args=>{const[position,setPosition]=(0,react.useState)(0);return(0,react.useEffect)((()=>{setTimeout((()=>setPosition(position>=order.length-1?0:position+1)),2e3)})),(0,jsx_runtime.jsx)(AnimatedTree,{data:data[order[position]],...args})}};Animations.parameters={...Animations.parameters,docs:{...null===(_Animations$parameter=Animations.parameters)||void 0===_Animations$parameter?void 0:_Animations$parameter.docs,source:{originalSource:"{\n  args: {\n    height: 400,\n    width: 600\n  },\n  parameters: {\n    controls: {\n      include: ['duration', 'easing', 'steps']\n    }\n  },\n  render: args => {\n    const [position, setPosition] = useState(0);\n    useEffect(() => {\n      setTimeout(() => {\n        if (position >= order.length - 1) {\n          return setPosition(0);\n        }\n        return setPosition(position + 1);\n      }, 2000);\n    });\n    return <AnimatedTree data={data[order[position]]} {...args} />;\n  }\n}",...null===(_Animations$parameter2=Animations.parameters)||void 0===_Animations$parameter2||null===(_Animations$parameter3=_Animations$parameter2.docs)||void 0===_Animations$parameter3?void 0:_Animations$parameter3.source}}};const __namedExportsOrder=["Animations"]}}]);